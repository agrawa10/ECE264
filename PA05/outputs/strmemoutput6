==10087== Memcheck, a memory error detector
==10087== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==10087== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==10087== Command: ./pa05 s inputs/strinput6 outputs/stroutput6
==10087== Parent PID: 10083
==10087== 
--10087-- 
--10087-- Valgrind options:
--10087--    --tool=memcheck
--10087--    --leak-check=full
--10087--    --verbose
--10087--    --log-file=outputs/strmemoutput6
--10087-- Contents of /proc/version:
--10087--   Linux version 2.6.32-358.18.1.el6.x86_64 (mockbuild@x86-003.build.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-3) (GCC) ) #1 SMP Fri Aug 2 17:04:38 EDT 2013
--10087-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--10087-- Page sizes: currently 4096, max supported 4096
--10087-- Valgrind library directory: /usr/lib64/valgrind
--10087-- Reading syms from /home/shay/a/agrawa10/ECE264/ECE264/PA05/pa05
--10087-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--10087--    object doesn't have a dynamic symbol table
--10087-- Reading syms from /lib64/ld-2.12.so
--10087-- Scheduler: using generic scheduler lock implementation.
--10087-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==10087== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-10087-by-agrawa10-on-ecelinux42.ecn.purdue.edu
==10087== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-10087-by-agrawa10-on-ecelinux42.ecn.purdue.edu
==10087== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-10087-by-agrawa10-on-ecelinux42.ecn.purdue.edu
==10087== 
==10087== TO CONTROL THIS PROCESS USING vgdb (which you probably
==10087== don't want to do, unless you know exactly what you're doing,
==10087== or are doing some strange experiment):
==10087==   /usr/lib64/valgrind/../../bin/vgdb --pid=10087 ...command...
==10087== 
==10087== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==10087==   /path/to/gdb ./pa05
==10087== and then give GDB the following command
==10087==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=10087
==10087== --pid is optional if only one valgrind process is running
==10087== 
--10087-- REDIR: 0x334fc17520 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--10087-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--10087-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--10087-- REDIR: 0x334fc17390 (index) redirected to 0x4a07bf0 (index)
--10087-- REDIR: 0x334fc17410 (strcmp) redirected to 0x4a08530 (strcmp)
--10087-- Reading syms from /lib64/libc-2.12.so
--10087-- REDIR: 0x3350084ec0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--10087-- REDIR: 0x3350087180 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--10087-- REDIR: 0x3350082e30 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--10087-- REDIR: 0x335007f8d0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--10087-- REDIR: 0x3350127ac0 (__strcmp_sse42) redirected to 0x4a08490 (strcmp)
--10087-- REDIR: 0x335007a8e0 (malloc) redirected to 0x4a0696c (malloc)
--10087-- REDIR: 0x3350083540 (memchr) redirected to 0x4a085d0 (memchr)
--10087-- REDIR: 0x3350089860 (memcpy) redirected to 0x4a08b20 (memcpy)
==10087== Invalid read of size 8
==10087==    at 0x4009D7: readString (answer05.c:181)
==10087==    by 0x400E5E: main (pa05.c:36)
==10087==  Address 0x4c38420 is 0 bytes after a block of size 208 alloc'd
==10087==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==10087==    by 0x400973: readString (answer05.c:173)
==10087==    by 0x400E5E: main (pa05.c:36)
==10087== 
--10087-- REDIR: 0x335007b710 (free) redirected to 0x4a06369 (free)
--10087-- REDIR: 0x335008ace0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--10087-- REDIR: 0x33500846f0 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--10087-- REDIR: 0x3350081350 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
==10087== 
==10087== HEAP SUMMARY:
==10087==     in use at exit: 2,728 bytes in 28 blocks
==10087==   total heap usage: 30 allocs, 2 frees, 3,504 bytes allocated
==10087== 
==10087== Searching for pointers to 28 not-freed blocks
==10087== Checked 64,928 bytes
==10087== 
==10087== 80 bytes in 1 blocks are definitely lost in loss record 1 of 3
==10087==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==10087==    by 0x400926: readString (answer05.c:165)
==10087==    by 0x400E5E: main (pa05.c:36)
==10087== 
==10087== 2,080 bytes in 26 blocks are definitely lost in loss record 3 of 3
==10087==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==10087==    by 0x40099A: readString (answer05.c:175)
==10087==    by 0x400E5E: main (pa05.c:36)
==10087== 
==10087== LEAK SUMMARY:
==10087==    definitely lost: 2,160 bytes in 27 blocks
==10087==    indirectly lost: 0 bytes in 0 blocks
==10087==      possibly lost: 0 bytes in 0 blocks
==10087==    still reachable: 568 bytes in 1 blocks
==10087==         suppressed: 0 bytes in 0 blocks
==10087== Reachable blocks (those to which a pointer was found) are not shown.
==10087== To see them, rerun with: --leak-check=full --show-reachable=yes
==10087== 
==10087== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 6 from 6)
==10087== 
==10087== 1 errors in context 1 of 3:
==10087== Invalid read of size 8
==10087==    at 0x4009D7: readString (answer05.c:181)
==10087==    by 0x400E5E: main (pa05.c:36)
==10087==  Address 0x4c38420 is 0 bytes after a block of size 208 alloc'd
==10087==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==10087==    by 0x400973: readString (answer05.c:173)
==10087==    by 0x400E5E: main (pa05.c:36)
==10087== 
--10087-- 
--10087-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--10087-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==10087== 
==10087== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 6 from 6)
